---
title: JElements
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }} | JElements</title>
    <link rel="stylesheet" href="{{ '/docs/src/styles/global.css' | url }}">
    <link rel="stylesheet" href="{{ '/docs/src/styles/prism-one-light.css' | url }}">
    {# <link rel="stylesheet" href="{{ '/docs/src/styles/prism-one-dark.css' | url }}" media="(prefers-color-scheme: dark)"> #}

    {# <link rel="stylesheet" href="{{ '/src/theme/color.css' | url }}"> #}
    <link rel="stylesheet" href="{{ '/src/theme/typography.css' | url }}">
    <link rel="stylesheet" href="{{ '/src/theme/space.css' | url }}">

    <script type="module" src="{{ '/docs/src/components/module-size.js' | url }}"></script>
    <script type="module" src="{{ '/docs/src/components/table-of-contents.js' | url }}"></script>
    <script type="module" src="{{ '/docs/src/components/render-example.js' | url }}"></script>

    <script type="module">
      const imports = `{{ imports }}`.split(/\s/g).map(str => str.trim()).filter(s => s);
      imports.forEach(url => {
        if (url.endsWith('.js')) {
          import(url);
        } else if (url.endsWith('.css')) {
          const link = document.createElement('link');
          link.rel = 'stylesheet';
          link.href = url;
          document.head.appendChild(link);
        }
      });

      // Needed for examples

      import {MutationAnimationMixin} from '{{ '/src/util/MutationAnimationMixin.js' | url }}';
      class MyList extends MutationAnimationMixin(HTMLElement) {}
      window.customElements.define('my-list', MyList);

      import {LightStyleMixin} from '{{ '/src/util/LightStyleMixin.js' | url }}';
      class StyledElement extends LightStyleMixin(HTMLElement) {
        static get styles() {
          return `
            :host {
              color: red;
              font-weight: bold;
            }
          `;
        }
      }
      window.customElements.define('styled-element', StyledElement);
    </script>
  </head>
  <body>
    <header class="main-nav">
      <h1>JElements</h1>
      <details><summary>Menu</summary></details>
      <nav>
        {{ collections.all | eleventyNavigation | eleventyNavigationToHtml({activeKey: eleventyNavigation.key, activeListItemClass: "active", listItemHasChildrenClass: "has-children"}) | safe }}
      </nav>
    </header>
      <main>
        <h1>{{ title }}</h1>
        <table-of-contents></table-of-contents>
        {% if imports %}
        <module-size modules="{{ imports }}"></module-size>
        {% endif %}
        {{ content | safe }}
        <footer>
          <p>Everything licensed under Apache 2.0</p>
          <a href="https://github.com/jouni/j-elements" title="View on GitHub" class="github-link">
            View on GitHub
          </a>
        </footer>
      </main>
  </body>
</html>
