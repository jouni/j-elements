/* TODO split per component and move any "core styles" into the component shadow DOM */




/* TODO: Safari now supports rounded outlines */
/* Focus outline ---------------------------------------------------- */

:focus:not(:focus-visible) {
  /* Support Windows High Contrast Mode */
  /* outline: 3px solid transparent; */
}

/* :focus-visible {
  outline: 3px solid transparent;
  box-shadow:
    0 0 0 var(--outline-offset, 2px) var(--gray),
    0 0 0 calc(var(--outline-width, 2px) + var(--outline-offset, 2px)) var(--outline-color, var(--accent-color));
} */

/* Safari */
@supports not selector(:focus-visible) {
  :focus {
    outline: 3px solid transparent;
    box-shadow:
      0 0 0 var(--outline-offset, 2px) var(--background),
      0 0 0 calc(var(--outline-width, 2px) + var(--outline-offset, 2px)) var(--outline-color, var(--border-color-accent));
  }
}





/* Link/Anchor ---------------------------------------------------- */

a {
  color: var(--link-color, var(--color-accent));
}

a:visited {
  color: var(--link-visited-color, var(--color-accent-high-contrast));
}






/* Field & Field Group ---------------------------------------------------- */

j-field,
j-field-group {
  display: flex;
  flex-direction: column;
  gap: var(--space-8, 0.5rem);
  contain: layout;
}

j-field-group {
  align-items: flex-start;
}

j-field[inline] {
  display: inline-flex;
}

:is(
  j-field,
  j-field-group
) label {
  -webkit-tap-highlight-color: transparent;
}

:is(
  j-field,
  j-field-group
) label:first-child {
  font: var(--font-field-label);
}

/* TODO consider removing */
:is(
  j-field,
  j-field-group
):focus-within > label:first-child {
  color: var(--color-accent);
}

:is(
  j-field[type=radio],
  j-field[type=checkbox],
  j-field-group label:not(:first-child)
) {
  display: inline-grid;
  grid-template-columns: auto auto;
  align-items: center;
  column-gap: var(--size-8);
  row-gap: var(--size-4);
  vertical-align: middle;
}

/* Grid placement styles are related to fields where the checkbox/radio button is after the label */
:is(
  j-field[type=radio],
  j-field[type=checkbox],
  j-field-group label:not(:first-child)
) > input:not(:first-child) {
  grid-row: 1;
}

:is(
  j-field[type=radio],
  j-field[type=checkbox],
  j-field-group label:not(:first-child)
) > :not(input:first-child) {
  grid-column: 1;
}

:is(
  j-field[type=radio],
  j-field[type=checkbox],
  j-field-group label:not(:first-child)
) > :is(
  input:not(:first-child),
  input:first-child ~ *
) {
  grid-column: 2;
}

:is(
  j-field,
  j-field-group
) :is(
  [description],
  [validation-message]
) {
  font: var(--font-field-description);
  margin: 0;
  color: var(--color-low-contrast);
}

[required-indicator] {
  color: var(--color-low-contrast);
  margin: 0 0.25em;
}

[required-indicator]::before {
  content: var(--content-required-indicator, "*");
}

j-field-group j-field {
  --content-required-indicator: "";
}

[error-indicator] {
  content: var(--content-error-indicator, "");
  display: inline-block;
  vertical-align: text-top;
  width: 1em;
  height: 1em;
  margin: 0 0.25em;
  background: var(--color-error, var(--red-500));
  --mask-image: var(--icon-error);
  -webkit-mask-image: var(--mask-image);
  mask-image: var(--mask-image);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: 50%;
  mask-position: 50%;
}






/* Overflow menu ---------------------------------------------------- */

/* Needed for Safari (Tech Preview) */
j-overflow-menu:focus {
  box-shadow: none;
}

j-overflow-menu {
  gap: var(--size-4);
  contain: layout;
}





/* Popup ---------------------------------------------------- */

::part(popup) {
  background: var(--background-surface-4a);
  background-blend-mode: var(--background-blend-mode-surface);
  --backdrop-filter: var(--backdrop-filter-surface);
  /* TODO create shadow tokens */
  border: 1px solid rgba(255, 255, 255, 0.08);
  box-shadow: 0 0 0 1px rgba(0,0,0,0.04), 0 4px 16px -2px rgba(0,0,0,0.2);
  padding: calc(var(--size-8) - 1px);
  border-radius: var(--border-radius-l);
  color: var(--color);
  /* For forced color mode */
  outline: 2px solid transparent;
}






/* Avatar & Avatar Group ---------------------------------------------------- */

html,
:host {
  --avatar-background-color: var(--background-ui);
  --avatar-color: var(--color);
}

j-avatar-group::part(popup) {
  gap: var(--size-12);
}

/* These should be kept in sync with j-avatar styles */
j-avatar-group [slot=overflow-button] {
  border-radius: var(--avatar-border-radius, 50%);
  width: var(--avatar-size, 2.5rem);
  height: var(--avatar-size, 2.5rem);
  background-color: var(--avatar-background-color, #ddd);
  color: var(--avatar-color, inherit);
  border: var(--avatar-border-width, 2px) solid var(--avatar-border-color, transparent);
  padding: 0;
  font: inherit;
}




/* Menu ---------------------------------------------------- */

/* TODO should define menu item tokens */
:is(j-menu, j-select, j-overflow-menu) :is([role=menuitem], [role=option]),
:is(j-menu, j-select, j-overflow-menu) :is([role=menuitem], [role=option]):not(:disabled, [aria-disabled=true]):where(:hover, :active, :focus) {
  all: initial;
  display: flex;
  align-items: center;
  gap: var(--size-12);
  font: inherit;
  color: inherit;
  box-sizing: border-box;
  padding: var(--size-6) var(--size-12);
  padding-inline-end: var(--size-16);
  border-radius: var(--border-radius-s);
  cursor: default;
  width: 100%;
  outline: none;
}

:is(j-menu, j-select, j-overflow-menu) :is([role=menuitem], [role=option]):not(:disabled, [aria-disabled=true]):is(:focus, :active) {
  background: var(--color);
  color: var(--gray);
}

:is(j-menu, j-select, j-overflow-menu) :is([role=menuitem], [role=option]):is([aria-expanded=true]),
:is(j-menu, j-select, j-overflow-menu) :is([role=menuitem], [role=option]):is(:disabled, [aria-disabled=true]):focus-visible {
  background: var(--background-ui-hover);
}

:is(j-menu, j-select, j-overflow-menu) :is([role=menuitem], [role=option]):is(:disabled, [aria-disabled=true]) {
  color: var(--color-disabled);
  cursor: not-allowed;
}

j-menu,
j-overflow-menu {
  --divider-margin: var(--size-6) calc(var(--size-6) * -1);
  --divider-color: var(--border-color-low-contrast);
}

:is(j-menu, j-overflow-menu, j-select)::part(popup) {
  border-radius: var(--border-radius-m);
  padding: var(--size-6);
}

button:not([slot=menu])+hr[slot=menu] {
  display: none;
}

:is([role=menuitem], [role=option]) icon {
  margin: 0 calc(var(--size-4) * -1);
}




/* Custom Select ---------------------------------------------------- */

/* Prevent layout shift */
j-select:not(:defined):has([selected]) button:not([selected]),
j-select:not(:defined):not(:has([selected])) button:not(:first-of-type) {
  display: none;
}

:is(j-select, j-menu) button[slot=trigger]::after,
:is(j-select, j-menu) [role=option]::before {
  content: "";
  /* Copied from icons.css */
  --_size: var(--icon-size);
  display: inline-block;
  vertical-align: baseline;
  width: var(--_size);
  height: var(--_size);
  overflow: hidden;
  --mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"></svg>');
  -webkit-mask-image: var(--mask-image);
  mask-image: var(--mask-image);
  -webkit-mask-size: var(--_size);
  -webkit-mask-position: 50%;
  -webkit-mask-repeat: no-repeat;
  mask-size: var(--_size);
  mask-position: 50%;
  mask-repeat: no-repeat;
  background: currentColor;
  flex: none;
  -webkit-user-select: none;
  user-select: none;
  contain: strict;
  margin: 0 calc(var(--size-6) * -1);
}

:is(j-select, j-menu) button[slot=trigger]::after {
  --mask-image: var(--icon-chevron-down);
  --icon-size: 1em;
}

j-select [role=option]:is([selected], [aria-selected=true])::before {
  --mask-image: var(--icon-checkmark);
}

j-select [slot=trigger]:empty::before {
  content: "Select option";
}

j-menu [role=menuitem][aria-haspopup]::after {
  rotate: -90deg;
}

[dir=rtl] j-menu [role=menuitem][aria-haspopup]::after {
  rotate: 90deg;
}
